[tool.poetry]
name = "unique-matcher"
version = "0.5.1"
description = ""
authors = ["staticf0x <staticf0x@pm.me>"]
readme = "README.md"
packages = [{include = "unique_matcher"}]

[tool.poetry.dependencies]
python = "~3.11"
numpy = "^1.25.1"
opencv-python = "^4.8.0.74"
pillow = "^10.0.0"
rich = "^13.5.2"
loguru = "^0.7.0"
pytesseract = "^0.3.10"
jinja2 = "^3.1.2"
pyside6 = "^6.5.2"
simple-term-menu = "^1.6.1"

[tool.poetry.group.dev.dependencies]
devtools = {extras = ["pygments"], version = "^0.11.0"}
types-pillow = "^10.0.0.2"
pytest = "^7.4.0"
mypy = "^1.5.1"
pytest-xdist = {extras = ["psutil"], version = "^3.3.1"}
black = "^23.9.1"
isort = "^5.12.0"
ruff = "^0.0.291"
pytest-cov = "^4.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.isort]
profile = "black"

[tool.ruff]
line-length = 100
target-version = "py311"

# For rule groups and specific rules, see:
# https://beta.ruff.rs/docs/rules/
select = ["ALL"]

ignore = [
    "ANN101",  # Missing type annotation for `self` in method
    "D406",  # Section name should end with a newline
    "D407",  # Missing dashed underline after section
    "D203",  # 1 blank line required before class docstring (incompatible with D211)
    "D213",  # Multi-line docstring summary should start at the second line (incompatible with D212)
    "D105",  # Missing docstring in magic method
    "D107",  # Missing docstring in `__init__`
    "TD",
]

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.per-file-ignores]
"tests/*" = [
    "ANN",  # All type annotations
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "S101",  # Use of `assert` detected
    "PLR2004",  # Magic value used in comparison
    "SLF001", # Private member access
]
"unique_matcher/constants.py" = [
    "ERA001",
]
"items.py" = ["T201", "SIM115"]
"main.py" = ["S701"]
"benchmark.py" = ["T201"]

[[tool.mypy.overrides]]
module = "pytesseract"
ignore_missing_imports = true
